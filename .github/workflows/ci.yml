name: Build, Test and Analyze

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Test & Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # SonarCloud scanner requer Java

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necessário para o SonarCloud analisar o histórico

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x # Use a versão do seu projeto

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool install dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Start SonarCloud Scan
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin \
            /k:"viniqsoares_SecureApi" \
            /o:"viniqsoares" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.vscoverage.reportsPaths=coverage.xml

      - name: Build
        run: dotnet build --configuration Release

      # Ainda não temos testes, mas o passo já fica aqui
      # - name: Test
      #   run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --logger "trx;LogFileName=test_results.trx"

      - name: Stop SonarCloud Scan
        run: |
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
